//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserService2
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WincoverageSOAP")]
    public partial class CompositeType : object
    {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue
        {
            get
            {
                return this.BoolValueField;
            }
            set
            {
                this.BoolValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue
        {
            get
            {
                return this.StringValueField;
            }
            set
            {
                this.StringValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService2.IUserService")]
    public interface IUserService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getAllUsers", ReplyAction="http://tempuri.org/IUserService/getAllUsersResponse")]
        string[][] getAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/getAllUsers", ReplyAction="http://tempuri.org/IUserService/getAllUsersResponse")]
        System.Threading.Tasks.Task<string[][]> getAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addUser", ReplyAction="http://tempuri.org/IUserService/addUserResponse")]
        void addUser(string User, string Name, string Email, string Phone, string Charge, string Rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/addUser", ReplyAction="http://tempuri.org/IUserService/addUserResponse")]
        System.Threading.Tasks.Task addUserAsync(string User, string Name, string Email, string Phone, string Charge, string Rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUser", ReplyAction="http://tempuri.org/IUserService/updateUserResponse")]
        void updateUser(string User, string Name, string Email, string Phone, string Charge, string Rol, string userMain, string nameMain, string emailMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/updateUser", ReplyAction="http://tempuri.org/IUserService/updateUserResponse")]
        System.Threading.Tasks.Task updateUserAsync(string User, string Name, string Email, string Phone, string Charge, string Rol, string userMain, string nameMain, string emailMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/deleteUser", ReplyAction="http://tempuri.org/IUserService/deleteUserResponse")]
        void deleteUser(string User, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/deleteUser", ReplyAction="http://tempuri.org/IUserService/deleteUserResponse")]
        System.Threading.Tasks.Task deleteUserAsync(string User, string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IUserService/GetDataUsingDataContractResponse")]
        UserService2.CompositeType GetDataUsingDataContract(UserService2.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IUserService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<UserService2.CompositeType> GetDataUsingDataContractAsync(UserService2.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IUserServiceChannel : UserService2.IUserService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<UserService2.IUserService>, UserService2.IUserService
    {
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string[][] getAllUsers()
        {
            return base.Channel.getAllUsers();
        }
        
        public System.Threading.Tasks.Task<string[][]> getAllUsersAsync()
        {
            return base.Channel.getAllUsersAsync();
        }
        
        public void addUser(string User, string Name, string Email, string Phone, string Charge, string Rol)
        {
            base.Channel.addUser(User, Name, Email, Phone, Charge, Rol);
        }
        
        public System.Threading.Tasks.Task addUserAsync(string User, string Name, string Email, string Phone, string Charge, string Rol)
        {
            return base.Channel.addUserAsync(User, Name, Email, Phone, Charge, Rol);
        }
        
        public void updateUser(string User, string Name, string Email, string Phone, string Charge, string Rol, string userMain, string nameMain, string emailMain)
        {
            base.Channel.updateUser(User, Name, Email, Phone, Charge, Rol, userMain, nameMain, emailMain);
        }
        
        public System.Threading.Tasks.Task updateUserAsync(string User, string Name, string Email, string Phone, string Charge, string Rol, string userMain, string nameMain, string emailMain)
        {
            return base.Channel.updateUserAsync(User, Name, Email, Phone, Charge, Rol, userMain, nameMain, emailMain);
        }
        
        public void deleteUser(string User, string Name)
        {
            base.Channel.deleteUser(User, Name);
        }
        
        public System.Threading.Tasks.Task deleteUserAsync(string User, string Name)
        {
            return base.Channel.deleteUserAsync(User, Name);
        }
        
        public UserService2.CompositeType GetDataUsingDataContract(UserService2.CompositeType composite)
        {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<UserService2.CompositeType> GetDataUsingDataContractAsync(UserService2.CompositeType composite)
        {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
    }
}
